=== Upload & Validation Integration Test ===
Initializing test environment...
Backend Canister ID: bkyz2-fmaaa-aaaaa-qaaaq-cai
Starting upload and validation tests...

--- Test 1: Valid JSON Upload ---
✅ PASS: Valid JSON Upload

--- Test 2: Valid CSV Upload ---
✅ PASS: Valid CSV Upload

--- Test 3: Invalid JSON Upload ---
❌ FAIL: Invalid JSON Upload (expected failure but succeeded)

--- Test 4: Unsupported MIME Type ---
❌ FAIL: Unsupported MIME Type (expected failure but succeeded)

--- Test 5: Empty Data Upload ---
❌ FAIL: Empty Data Upload (expected failure but succeeded)

--- Test 6: Large Data Upload ---
❌ FAIL: Large Data Upload (expected failure but succeeded)

--- Testing Data Duplication Detection ---
Uploading initial data...
First upload successful

--- Test 7: Duplicate Data Detection ---
✅ PASS: Duplicate Data Detection
Note: Duplicate data should be handled gracefully (returning existing ID)

--- Testing Storage State Queries ---

--- Test 8: Storage Stats Query ---
✅ PASS: Storage Stats Query

--- Test 9: List Uploaded Data ---
✅ PASS: List Uploaded Data

--- Testing Data Retrieval ---

--- Test 10: Valid Data Retrieval ---
✅ PASS: Valid Data Retrieval

--- Test 11: Invalid Data ID Retrieval ---
✅ PASS: Invalid Data ID Retrieval
Note: Invalid ID should return null/none, not error

--- Testing Data Existence Checks ---

--- Test 12: Check Existing Data ---
✅ PASS: Check Existing Data

--- Test 13: Check Non-existing Data ---
✅ PASS: Check Non-existing Data

--- Testing Minting Status Checks ---

--- Test 14: Check Data Minted Status ---
✅ PASS: Check Data Minted Status

--- Test 15: Check Multiple Data Status ---
✅ PASS: Check Multiple Data Status

--- Testing Data Integrity ---
Testing data integrity by re-uploading and comparing...

--- Test 16: Data Integrity Check ---
✅ PASS: Data Integrity Check

========================================
Upload & Validation Test Results
========================================
Total Tests: 16
Passed: 12
Failed: 4

❌ SOME TESTS FAILED
Success Rate: 75%

Detailed Results:
  PASS: Valid JSON Upload
  PASS: Valid CSV Upload
  FAIL: Invalid JSON Upload (unexpected success)
  FAIL: Unsupported MIME Type (unexpected success)
  FAIL: Empty Data Upload (unexpected success)
  FAIL: Large Data Upload (unexpected success)
  PASS: Duplicate Data Detection
  PASS: Storage Stats Query
  PASS: List Uploaded Data
  PASS: Valid Data Retrieval
  PASS: Invalid Data ID Retrieval
  PASS: Check Existing Data
  PASS: Check Non-existing Data
  PASS: Check Data Minted Status
  PASS: Check Multiple Data Status
  PASS: Data Integrity Check

Final Storage State:
====================
(
  record {
    storage_size = 104 : nat64;
    completed_mints = 0 : nat64;
    total_mint_requests = 1 : nat64;
    failed_mints = 1 : nat64;
    pending_mints = 0 : nat64;
    total_uploads = 7 : nat64;
  },
)

(
  vec {
    record {
      id = 1 : nat64;
      size = 11 : nat64;
      mime_type = "application/json";
      timestamp = 1_753_249_935_522_344_487 : nat64;
    };
    record {
      id = 2 : nat64;
      size = 10 : nat64;
      mime_type = "text/csv";
      timestamp = 1_753_249_936_794_990_901 : nat64;
    };
    record {
      id = 3 : nat64;
      size = 9 : nat64;
      mime_type = "text/csv";
      timestamp = 1_753_249_936_794_990_901 : nat64;
    };
    record {
      id = 4 : nat64;
      size = 29 : nat64;
      mime_type = "application/json";
      timestamp = 1_753_251_525_382_408_494 : nat64;
    };
    record {
      id = 5 : nat64;
      size = 15 : nat64;
      mime_type = "text/csv";
      timestamp = 1_753_251_526_667_097_714 : nat64;
    };
    record {
      id = 6 : nat64;
      size = 16 : nat64;
      mime_type = "text/csv";
      timestamp = 1_753_251_526_667_097_714 : nat64;
    };
    record {
      id = 7 : nat64;
      size = 14 : nat64;
      mime_type = "text/csv";
      timestamp = 1_753_251_526_667_097_714 : nat64;
    };
  },
)

=== Upload & Validation Test Completed ===
